theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
theme(axis.text.x = element_text(angle=90, hjust=1)) + #definindo a posição vertical para o eixo x
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Constitution Year") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 <- constituicoes_poderes %>%
select(constitution_year, abbreviation, imp_l, imp_e, imp_j) %>% #selecionando as variáveis de interesse
pivot_longer(cols=3:5, names_to = "indices", values_to = "valores") #pivotando os dados para poder plotar os 3 indices
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
theme(axis.text.x = element_text(angle=90, hjust=1)) + #definindo a posição vertical para o eixo x
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Constitution Year") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
theme(axis.text.x = element_text(angle=90, hjust=1)) + #definindo a posição vertical para o eixo x
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(colours = viridis(256, option = "D")) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis() + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, option = "C") + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, option = "A") + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, option = "B") + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, option = "C") + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, option = "C") + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, option = "E") + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, n=0.7) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0.5, end=1) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.6) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
knit_with_parameters('~/GitHub/lista-4/lista-4-metodos.Rmd', encoding = 'UTF-8')
knit_with_parameters('~/GitHub/lista-4/lista-4-metodos.Rmd', encoding = 'UTF-8')
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = poderes)) + #determinando os eixos x e y
geom_point(aes(color = abbreviation)) + #determinando a cor por abreviacao/estado
theme_classic() #deixando clean
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = imp_l)) + #determinando os eixos x e y
geom_line(aes(color = "red")) + #determinando a cor por abreviacao/estado
geom_point(color = "red") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() + #deixando clean
labs(title = "IMP do Legislativo por Ano Constitucional", #determinando os labels
y = "IMP_L", x="Constitution_Year") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15))
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = imp_e)) + #determinando os eixos x e y
geom_line(aes(color = "red")) + #determinando a cor por abreviacao/estado
geom_point(color = "red") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() + #deixando clean
labs(title = "IMP do Executivo por Ano Constitucional", #determinando os labels
y = "IMP_E", x="Constitution_Year") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15))
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = imp_j)) + #determinando os eixos x e y
geom_line(aes(color = "red")) + #determinando a cor por abreviacao/estado
geom_point(color = "red") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() + #deixando clean
labs(title = "IMP do Judiciário por Ano Constitucional", #determinando os labels
y = "IMP_J", x="Constitution_Year") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15))
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = imp_j)) + #determinando os eixos x e y
geom_line(aes(color = "red")) + #determinando a cor por abreviacao/estado
geom_point(color = "red") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() + #deixando clean
labs(title = "IMP do Judiciário por Ano Constitucional", #determinando os labels
y = "IMP_J", x="Constitution_Year") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15))
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15)) #determinando o tamanho das fontes doslabels
constituicoes_poderes %>%
ggplot(aes(constitution_year, poderes)) + #selecionando os eixos ano da constituicao e da variavel de interesse (poderes)
geom_line(color = "steelblue", size = 1) + #determinando a cor e tamanho da linha
geom_point(color = "steelblue") + #determinando a cor do ponto
labs(title = "Powers by Constitution Year", #determinando os labels
y = "Powers", x="Constitution_Year") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15))
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = poderes)) + #determinando os eixos x e y
geom_point(aes(color = abbreviation)) + #determinando a cor por abreviacao/estado
theme_classic() #deixando clean
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = poderes)) + #determinando os eixos x e y
geom_point(aes(color = abbreviation)) + #determinando a cor por abreviacao/estado
theme_classic() #deixando clean
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = poderes)) + #determinando os eixos x e y
geom_point(aes(color = abbreviation)) + #determinando a cor por abreviacao/estado
theme_classic() #deixando clean
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = imp_l)) + #determinando os eixos x e y
geom_line(aes(color = "red")) + #determinando a cor por abreviacao/estado
geom_point(color = "red") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() + #deixando clean
labs(title = "IMP do Legislativo por Ano Constitucional", #determinando os labels
y = "IMP_L", x="Constitution_Year") +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15))
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = imp_l)) + #determinando os eixos x e y
geom_line(aes(color = "red")) + #determinando a cor por abreviacao/estado
geom_point(color = "red") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() + #deixando clean
labs(title = "IMP do Legislativo por Ano Constitucional", #determinando os labels
y = "IMP_L", x="Constitution_Year") +
theme(axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10))
constituicoes_poderes %>%
ggplot(aes(x = constitution_year,
y = imp_l)) + #determinando os eixos x e y
geom_line(aes(color = "red")) + #determinando a cor por abreviacao/estado
geom_point(color = "red") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() + #deixando clean
labs(title = "IMP do Legislativo por Ano Constitucional", #determinando os labels
y = "IMP_L", x="Constitution_Year") +
theme(axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10))
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #determinando o tamanho das fontes doslabels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #determinando o tamanho das fontes dos labels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #determinando o tamanho das fontes dos labels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 6, angle=90, hjust=1),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #determinando o tamanho das fontes dos labels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
scale_y_continuous(breaks = c(0.00, 0.30, 0.75)) +
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 6, angle=90, hjust=1),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #determinando o tamanho das fontes dos labels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
scale_y_continuous(breaks = c(0.00, 0.35, 0.75)) +
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 6, angle=90, hjust=1),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #determinando o tamanho das fontes dos labels
constituicoes_poderes_grafico5 %>%ggplot(aes(x= constitution_year, y= valores, group=indices, color=indices)) + #determinando eixos x, y e as linhas do grafico para cada um dos indices
geom_line() + #ordenando as observações a partir do eixo x
geom_point() + #inserindo pontos nas linhas do gráfico apra marcar as mudanças
facet_wrap(~ abbreviation) + #separando por estado
scale_color_viridis(discrete = TRUE, begin=0, end=0.8) + # definindo escala de cores das linhas dos gráficos e ajustando com begin e end para que a paleta de cores fiquem mais fortes e menos suaves
scale_y_continuous(breaks = c(0.00, 0.40, 0.80)) + #definindo as escalas do eixo y
theme_classic() + #tema clássico para ficar mais clean
labs(title = "Indices por ano constitucional e estado", #determinando os marcadores dos gráficos
y = "Valores dos indices", x="Ano da Constituição") +
theme(axis.text.x = element_text(size = 6, angle=90, hjust=1),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #determinando o tamanho das fontes dos labels
constituicoes_poderes %>%
ggplot(aes(constitution_year, poderes)) + #selecionando os eixos ano da constituicao e da variavel de interesse (poderes)
geom_line(color = "steelblue", size = 1) + #determinando a cor e tamanho da linha
geom_point(color = "steelblue") + #determinando a cor do ponto
labs(title = "Powers by Constitution Year", #determinando os labels
y = "Powers", x="Constitution_Year") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() +
theme(axis.text.x = element_text(size = 8.5),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 15))
constituicoes_poderes %>%
ggplot(aes(constitution_year, poderes)) + #selecionando os eixos ano da constituicao e da variavel de interesse (poderes)
geom_line(color = "steelblue", size = 1) + #determinando a cor e tamanho da linha
geom_point(color = "steelblue") + #determinando a cor do ponto
labs(title = "Poderes pelo ano da Constituição", #determinando os labels
y = "Poderes", x="Ano da Constituição") +
facet_wrap(~ abbreviation) + #separando por estado
theme_classic() +
theme(axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #definindo o tamanho das fontes dos textos dos eixos
constituicoes_poderes %>%
ggplot(aes(constitution_year, poderes)) + #selecionando os eixos ano da constituicao e da variavel de interesse (poderes)
geom_line(color = "steelblue", size = 1) + #determinando a cor e tamanho da linha
geom_point(color = "steelblue") + #determinando a cor do ponto
labs(title = "Poderes pelo ano da Constituição", #determinando os labels
y = "Poderes", x="Ano da Constituição") +
facet_wrap(~ abbreviation) + #separando por estado
scale_y_continuous(breaks = c(0, 7500, 15000)) + #definindo as escalas do eixo y
theme_classic() +
theme(axis.text.x = element_text(size = 6, angle=90, hjust=1), #rotacionando o eixo x para melhorar a visualização das datas
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10)) #definindo o tamanho das fontes dos textos dos eixos
tabela_para_alpha <- constituicoes_poderes %>% #criando um novo objeto para o cálculo do alpha
select(imp_l, imp_e, imp_j) %>% #selecionadno as variáveis com os valores do índice
psych::alpha(tabela_para_alpha, check.keys = TRUE) #aplicando a função alpha de Cronbach, já definida pelo pacote psych
library(psych) #baixando o pacote psych
tabela_para_alpha <- constituicoes_poderes %>% #criando um novo objeto para o cálculo do alpha
select(imp_l, imp_e, imp_j) %>% #selecionadno as variáveis com os valores do índice
psych::alpha(tabela_para_alpha, check.keys = TRUE) #aplicando a função alpha de Cronbach, já definida pelo pacote psych
tabela_para_alpha <- constituicoes_poderes %>% #criando um novo objeto para o cálculo do alpha
select(imp_l, imp_e, imp_j)
tabela_para_alpha %>% #selecionadno as variáveis com os valores do índice
psych::alpha(tabela_para_alpha, check.keys = TRUE) #aplicando a função alpha de Cronbach, já definida pelo pacote psych
constituicoes_poderes <- state_const %>% ##criando um novo data frame com as manipulações
select(state, constitution_year,current_constitution,
total_words, legislative, executive, judicial) %>% ##selecionando as variáveis de interesse
left_join(States_and_Abbreviations, constituicoes_poderes, by = "state") %>% ##criando uma nova coluna de abreviacoes a partir do data.frame States and Abbreviations
mutate (poderes = (legislative + executive + judicial), ##criando uma nova coluna com os valores somados das categorias executivo, legislativo e judiciário
imp_l = (legislative/poderes), ##criando o índice de proporcionalidade do legislativo em relação à soma dos poderes
imp_e = (executive/poderes), ##criando o índice de proporcionalidade do executivo em relação à soma dos poderes
imp_j = (judicial/poderes)) ##criando o índice de proporcionalidade do judiciário em relação à soma dos poderes
tabela_para_alpha <- constituicoes_poderes %>% #criando um novo objeto para o cálculo do alpha
select(imp_l, imp_e, imp_j)
tabela_para_alpha %>% #selecionadno as variáveis com os valores do índice
psych::alpha(tabela_para_alpha, check.keys = TRUE) #aplicando a função alpha de Cronbach, já definida pelo pacote psych
tabela_para_alpha <- constituicoes_poderes %>% #criando um novo objeto para o cálculo do alpha
select(imp_l, imp_e, imp_j) %>% #selecionadno as variáveis com os valores do índice
psych::alpha(tabela_para_alpha, check.keys = TRUE) #aplicando a função alpha de Cronbach, já definida pelo pacote psych
tabela_para_alpha %>% #selecionadno as variáveis com os valores do índice
psych::alpha(tabela_para_alpha, check.keys = TRUE) #aplicando a função alpha de Cronbach, já definida pelo pacote psych
